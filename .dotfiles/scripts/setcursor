#!/usr/bin/env dub
/+ dub.sdl:
name "setcursor"
// dependency "depname" version="~>1.0.0"
+/

import std.stdio: writeln, write, File, readln;
import std.array: join;
import std.path: absolutePath, buildNormalizedPath, expandTilde;
import std.algorithm: canFind;
import std.process: wait, spawnProcess;

string fixPath(string path) { 
    return path.buildNormalizedPath.expandTilde.absolutePath; 
}

void writeFile(string path, string content) {
    File f;
    f = File(path.fixPath(), "w+");
    f.write(content);
    f.close();
}

int main(string[] args) {
    if (args.canFind("-h") || args.canFind("--help") || args.length == 1) {
        writeln("Usage: setcursor Cursor_Name\nExample:\n    setcursor Breeze_Snow");
        return 0;
    }
    string cursorName = args[1..$].join();
    write("Set cursor to \"", cursorName, "\"? [y/N]: ");
    char answer = readln()[0];
    if (answer != 'y' && answer != 'Y') {
        writeln("Aborting.");
        return 0;
    }
    
    writeFile("~/.icons/default/index.theme", "[icon theme]\nInherits=" ~ cursorName);
    writeFile("~/.config/gtk-3.0/settings.ini", "[Settings]\ngtk-cursor-theme-name=" ~ cursorName);
    writeFile("~/.Xresources", "Xcursor.theme: " ~ cursorName);
    
    wait(spawnProcess([
        "xfconf-query",
        "--channel",
        "xsettings",
        "--property",
        "/Gtk/CursorThemeName",
        "--set",
        cursorName
    ]));

    return 0;
}
