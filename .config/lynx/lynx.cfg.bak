# $LynxId: lynx.cfg,v 1.358 2024/05/31 22:09:16 tom Exp $
# lynx.cfg file.
# The default placement for this file is /usr/local/lib/lynx.cfg (Unix)
#                                     or Lynx_Dir:lynx.cfg (VMS)
#
# LYNX_VERSION "2.9.2"
# LYNX_DATE    "31 May 2024"
#
# Definition pairs (configuration settings) are of the form
#    VARIABLE:DEFINITION
# NO spaces are allowed around the colon ":" between the pair items.
#

# - ---------------------------------------------------------------------------- -
# -                                .h2 STARTFILE                                 -
# - ---------------------------------------------------------------------------- -
STARTFILE:https://al1-ce.dev/
HELPFILE:file:///usr/share/doc/lynx/lynx_help/lynx_help_main.html

# - ---------------------------------------------------------------------------- -
# -                                .h1 Appearance                                -
# - ---------------------------------------------------------------------------- -
#USE_SELECT_POPUPS:TRUE
SHOW_CURSOR:TRUE
UNDERLINE_LINKS:TRUE
BOLD_HEADERS:TRUE
BOLD_H1:TRUE
BOLD_NAME_ANCHORS:TRUE

# - ---------------------------------------------------------------------------- -
# -                              .h1 Keyboard Input                              -
# - ---------------------------------------------------------------------------- -

# - --------------------------- .h2 KEYBOARD_LAYOUT ---------------------------- -
# If your terminal (or terminal emulator, or operating system) does not
# support 8-bit input (at all or in easy way), you can use Lynx to
# generate 8-bit characters from 7-bit ones output by terminal.
#
# Currently available keyboard layouts:
#    ROT13'd keyboard layout
#    JCUKEN Cyrillic, for AT 101-key kbd
#    YAWERTY Cyrillic, for DEC LK201 kbd
#
# This feature is ifdef'd with EXP_KEYBOARD_LAYOUT.
#KEYBOARD_LAYOUT:JCUKEN Cyrillic, for AT 101-key kbd

# - -------------------------------- .h2 KEYMAP -------------------------------- -
# Key remapping definitions!
#
# You may redefine the keymapping of any function in Lynx by
# using the KEYMAP option.  The basic form of KEYMAP is:
#  KEYMAP:<KEYSTROKE>:<LYNX FUNCTION>
# (See below for an extended format.)
#
# You must map upper and lowercase keys separately.
#
# A representative list of functions mapped to their default keys is
# provided below.  All of the mappings are commented out by default
# since they just repeat the default mappings, except for TOGGLE_HELP
# (see below).  See LYKeymap.c for the complete key mapping.  Use the
# 'K'eymap command when running Lynx for a list of the _current_ keymappings.
#
# You can disable any of the default key-mappings by mapping the key to
# "UNMAPPED".
#
# (However, in contrast to the output of 'K' command,
# 'H'elp (lynx_help/*.html and lynx_help/keystrokes/*.html files) shows
# the default mapping unless you change that files manually,
# so you are responsible for possible deviations
# when you are changing any KEYMAP below).
#
# Lynx accepts special keys either by name, or by lynx-specific codes.  These
# names and codes are listed below, with a brief description:
.nf
#         UPARROW: 0x100 (Up Arrow)
#         DNARROW: 0x101 (Down Arrow)
#         RTARROW: 0x102 (Right Arrow)
#         LTARROW: 0x103 (Left Arrow)
#          PGDOWN: 0x104 (Page Down)
#            PGUP: 0x105 (Page Up)
#            HOME: 0x106 (Keypad Home)
#             END: 0x107 (Keypad End)
#              F1: 0x108 (VT220 Function-key 1, also Help Key)
#          DO_KEY: 0x109 (VT220 Function key 16, also "Do" Key)
#        FIND_KEY: 0x10A (VT220 key with label "Home" may be treated as Find)
#      SELECT_KEY: 0x10B (VT220 key with label "End" may be treated as Select)
#      INSERT_KEY: 0x10C (VT220 Insert Key)
#      REMOVE_KEY: 0x10D (VT220 Remove (DEL) Key)
#      DO_NOTHING: 0x10E (reserved for internal use, DO_NOTHING)
#     BACKTAB_KEY: 0x10F (Back Tab, e.g., using Shift)
#              F2: 0x110 (VT220 Function-key 2)
#              F3: 0x111 (VT220 Function-key 3)
#              F4: 0x112 (VT220 Function-key 4)
#              F5: 0x113 (VT220 Function-key 5)
#              F6: 0x114 (VT220 Function-key 6)
#              F7: 0x115 (VT220 Function-key 7)
#              F8: 0x116 (VT220 Function-key 8)
#              F9: 0x117 (VT220 Function-key 9)
#             F10: 0x118 (VT220 Function-key 10)
#             F11: 0x119 (VT220 Function-key 11)
#             F12: 0x11A (VT220 Function-key 12)
#           MOUSE: 0x11D (reserved for internal use with -use_mouse)
.fi
# Other codes not listed above may be available for additional keys,
# depending on operating system and libraries used to compile Lynx.
# On Unix-like systems, if compiled with slang or ncurses, an additional
# level of key mapping is supported via an external ".lynx-keymaps" file.
# This file, if found in the home directory at startup, will always be
# used under those conditions; see lynx-keymaps distributed in the samples
# subdirectory for further explanation.  Note that mapping via
# .lynx-keymaps, if applicable, is a step that logically comes before the
# mappings done here: KEYMAP maps the result of that step (which still
# represents a key) to a function (which represents an action that Lynx
# should perform).
.nf
#
KEYMAP:0x5C:SOURCE                # Toggle source viewing mode (show HTML source)
KEYMAP:^R:RELOAD                  # Reload the current document and redisplay
KEYMAP:^U:NEXT_DOC                # Undo PREV_DOC)
KEYMAP:q:QUIT                     # Ask the user to quit
KEYMAP:Q:ABORT                    # Quit without verification
KEYMAP:0x20:NEXT_PAGE             # Move down to next page (space)
KEYMAP:-:PREV_PAGE                # Move up to previous page
KEYMAP:^P:UP_TWO                  # Move display up two lines
KEYMAP:INSERT_KEY:UP_TWO          # Function key Insert - Move display up two lines
KEYMAP:^N:DOWN_TWO                # Move display down two lines
KEYMAP:REMOVE_KEY:DOWN_TWO        # Function key Remove - Move display down two lines
KEYMAP:(:UP_HALF                  # Move display up half a page
KEYMAP:):DOWN_HALF                # Move display down half a page
KEYMAP:^W:REFRESH                 # Refresh the screen
KEYMAP:^A:HOME                    # Go to top of current document
KEYMAP:HOME:HOME                  # Keypad Home - Go to top of current document
KEYMAP:FIND_KEY:HOME              # Function key Find - Go to top of current document
KEYMAP:^E:END                     # Go to bottom of current document
KEYMAP:END:END                    # Keypad End - Go to bottom of current document
KEYMAP:SELECT_KEY:END             # Function key Select - Go to bottom of current document
KEYMAP:UPARROW:PREV_LINK          # Move to the previous link or page
KEYMAP:DNARROW:NEXT_LINK          # Move to the next link or page
KEYMAP:BACKTAB_KEY:FASTBACKW_LINK # Back Tab - Move to previous link or text area
KEYMAP:^I:FASTFORW_LINK           # Tab key - Move always to next link or text area
KEYMAP:^:FIRST_LINK               # Move to the first link on line
KEYMAP:$:LAST_LINK                # Move to the last link on line
KEYMAP:<:UP_LINK                  # Move to the link above
KEYMAP:>:DOWN_LINK                # Move to the link below
KEYMAP:0x7F:HISTORY               # Show the history list
KEYMAP:0x08:HISTORY               # Show the history list
KEYMAP:LTARROW:PREV_DOC           # Return to the previous document in history stack
KEYMAP:RTARROW:ACTIVATE           # Select the current link
KEYMAP:DO_KEY:ACTIVATE            # Function key Do - Select the current link
KEYMAP:g:GOTO                     # Goto a random URL
KEYMAP:G:ECGOTO                   # Edit the current document's URL and go to it
KEYMAP:H:HELP                     # Show default help screen
KEYMAP:F1:DWIMHELP                # Function key Help - Show a help screen
KEYMAP:i:INDEX                    # Show default index
#*** Edit FORM_LINK_* messages in LYMessages_en.h if you change NOCACHE ***
KEYMAP:x:NOCACHE                  # Force submission of form or link with no-cache
#*** Do not change INTERRUPT from 'z' & 'Z' ***
KEYMAP:z:INTERRUPT     # Interrupt network transmission
KEYMAP:m:MAIN_MENU     # Return to the main menu
KEYMAP:o:OPTIONS       # Show the options menu
KEYMAP:i:INDEX_SEARCH  # Search a server based index
KEYMAP:/:WHEREIS       # Find a string within the current document
KEYMAP:n:NEXT          # Find next occurrence of string within document
KEYMAP:c:COMMENT       # Comment to the author of the current document
KEYMAP:C:CHDIR         # Change current directory
KEYMAP:e:EDIT          # Edit current document or form's textarea (call: ^Ve)
KEYMAP:E:ELGOTO        # Edit the current link's URL or ACTION and go to it
KEYMAP:=:INFO          # Show info about current document
KEYMAP:p:PRINT         # Show print options
KEYMAP:a:ADD_BOOKMARK  # Add current document to bookmark list
KEYMAP:v:VIEW_BOOKMARK # View the bookmark list
KEYMAP:V:VLINKS        # List links visited during the current Lynx session
KEYMAP:!:SHELL         # Spawn default shell
KEYMAP:d:DOWNLOAD      # Download current link
KEYMAP:j:JUMP          # Jump to a predefined target
KEYMAP:k:KEYMAP        # Display the current key map
KEYMAP:l:LIST          # List the references (links) in the current document
KEYMAP:#:TOOLBAR       # Go to the Toolbar or Banner in the current document
KEYMAP:^T:TRACE_TOGGLE # Toggle detailed tracing for debugging
KEYMAP:;:TRACE_LOG     # View trace log if available for the current session
KEYMAP:*:IMAGE_TOGGLE  # Toggle inclusion of links for all images
KEYMAP:[:INLINE_TOGGLE # Toggle pseudo-ALTs for inlines with no ALT string
KEYMAP:]:HEAD          # Send a HEAD request for current document or link
#*** Must be compiled with USE_EXTERNALS to enable EXTERN_LINK, EXTERN_PAGE ***
KEYMAP:,:EXTERN_PAGE # Run external program with current page
KEYMAP:.:EXTERN_LINK # Run external program with current link
#*** Escaping from text input fields with ^V is independent from this: ***
KEYMAP:^V:SWITCH_DTD         # Toggle between SortaSGML and TagSoup HTML parsing
KEYMAP:0x00:DO_NOTHING       # Does nothing (ignore this key)
KEYMAP:DO_NOTHING:DO_NOTHING # Does nothing (ignore this key)
KEYMAP:{:SHIFT_LEFT          # shift the screen left
KEYMAP:}:SHIFT_RIGHT         # shift the screen right
KEYMAP:|:LINEWRAP_TOGGLE     # toggle linewrap on/off, for shift-commands
KEYMAP:~:NESTED_TABLES       # toggle nested-tables parsing on/off
.fi
# In addition to the bindings available by default, the following functions
# are not directly mapped to any keys by default, although some of them may
# be mapped in specific line-editor bindings (effective while in text input
# fields):
.nf
#
#KEYMAP:???:RIGHT_LINK        # Move to the link to the right
#KEYMAP:???:LEFT_LINK        # Move to the link to the left
#KEYMAP:???:LPOS_PREV_LINK    # Like PREV_LINK, last column pos if form input
#KEYMAP:???:LPOS_NEXT_LINK    # Like NEXT_LINK, last column pos if form input
#*** Only useful in form text fields , need PASS or prefixing with ^V: ***
#KEYMAP:???:DWIMHELP        # Display help page that may depend on context
#KEYMAP:???:DWIMEDIT        # Use external editor for context-dependent purpose
#*** Only useful in a form textarea, need PASS or prefixing with ^V: ***
#KEYMAP:???:EDITTEXTAREA    # use external editor to edit a form textarea
#KEYMAP:???:GROWTEXTAREA    # Add some blank lines to bottom of textarea
#KEYMAP:???:INSERTFILE        # Insert file into a textarea (just above cursor)
#*** Only useful with dired support and OK_INSTALL: ***
#KEYMAP:???:INSTALL        # install (i.e. copy) local files to new location
.fi
#
# If TOGGLE_HELP is mapped, in novice mode the second help menu line
# can be toggled among NOVICE_LINE_TWO_A, _B, and _C, as defined in
# LYMessages_en.h  Otherwise, it will be NOVICE_LINE_TWO.
#
KEYMAP:O:TOGGLE_HELP        # Show other commands in the novice help menu
#
# KEYMAP lines can have one or two additional fields.  The extended format is
#  KEYMAP:<KEYSTROKE>:[<MAIN LYNX FUNCTION>]:<OTHER BINDING>[:<SELECT>]
#
# If the additional field OTHER BINDING specifies DIRED, then the function is
# mapped in the override table used only in DIRED mode.  This is only valid
# if lynx was compiled with dired support and OK_OVERRIDE defined.  A
# MAIN LYNX FUNCTION must be given (it should of course be one that makes
# sense in Dired mode), and SELECT is meaningless.  Default built-in override
# mappings are
#
KEYMAP:^U:NEXT_DOC:DIRED    # Undo going back to the previous document
KEYMAP:.:TAG_LINK:DIRED    # Tag a file or directory for later action
KEYMAP:c:CREATE:DIRED        # Create a new file or directory
KEYMAP:C:CHDIR:DIRED        # change current directory
KEYMAP:f:DIRED_MENU:DIRED    # Display a menu of file operations
KEYMAP:m:MODIFY:DIRED        # Modify name or location of a file or directory
KEYMAP:r:REMOVE:DIRED        # Remove files or directories
KEYMAP:t:TAG_LINK:DIRED    # Tag a file or directory for later action
KEYMAP:u:UPLOAD:DIRED        # Show menu of "Upload Options"
#
# If the OTHER BINDING field does not specify DIRED, then it is taken as a
# line-editor action.  It is possible to keep the MAIN LYNX FUNCTION field
# empty in that case, for changing only the line-editing behavior.
# If alternative line edit styles are compiled in, and modifying a key's
# line-editor binding on a per style basis is possible, then SELECT can be
# used to specify which styles are affected.  By default, or if SELECT is
# 0, all line edit styles are affected.  If SELECT is a positive integer
# number, only the binding for the numbered style is changed (numbering
# is in the order in which styles are shown in the Options Menu, starting
# with 1 for the Default style).  If SELECT is negative (-n), all styles
# except n are affected.
.nf
#
#  NOP        # Do Nothing
#  ABORT    # Input cancelled
#
#  BOL        # Go to begin of line
#  EOL        # Go to end   of line
#  FORW        # Cursor forwards
#  FORW_RL    # Cursor forwards or right link
#  BACK        # Cursor backwards
#  FORWW    # Word forward
#  BACKW    # Word back
#  BACK_LL    # Cursor backwards or left link
#
#  DELN        # Delete next/curr char
#  DELP        # Delete prev      char
#  DELNW    # Delete next word
#  DELPW    # Delete prev word
#  DELBL    # Delete back to BOL
#  DELEL    # Delete through EOL
#  ERASE    # Erase the line
#  LOWER    # Lower case the line
#  UPPER    # Upper case the line
#
#  LKCMD    # In fields: Invoke key command prompt (default for ^V)
#  PASS        # In fields: handle as non-lineedit key; in prompts: ignore
#
.fi
# Modify following key (prefixing only works within line-editing, edit actions
# of some resulting prefixed keys are built-in, see Line Editor help pages)
#  SETM1    # Set modifier 1 flag (default for ^X - key prefix)
#  SETM2    # Set modifier 2 flag (another key prefix - same effect)
#
# May not always be compiled in:
.nf
#
#  TPOS        # Transpose characters
#  SETMARK    # emacs-like set-mark-command
#  XPMARK    # emacs-like exchange-point-and-mark
#  KILLREG    # emacs-like kill-region
#  YANK        # emacs-like yank
#  SWMAP    # Switch input keymap
#  PASTE    # ClipBoard to Lynx - Windows Extension
#
.fi
# May work differently from expected if not bound to their expected keys:
.nf
#
#  CHAR        # Insert printable char (default for all ASCII printable)
#  ENTER    # Input complete, return char/lynxkeycode (for RETURN/ENTER)
#  TAB        # Input complete, return TAB (for ASCII TAB char ^I)
#
.fi
# Internal use, probably not useful for binding, listed for completeness:
.nf
#
#  UNMOD    # Fall back to no-modifier command
#  AIX        # Hex 97
#  C1CHAR    # Insert C1 char if printable
#
.fi
# If OTHER BINDING specifies PASS, then if the key is pressed in a text input
# field it is passed by the built-in line-editor to normal KEYMAP handling,
# i.e. this flag acts like an implied ^V escape (always overrides line-editor
# behavior of the key).  For example,
#KEYMAP:INSERT_KEY:UP_TWO:PASS # Function key Insert - Move display up two lines
#
# Other examples (repeating built-in bindings)
#KEYMAP:^V::LKCMD    # set (only) line-edit action for ^V
#KEYMAP:^V:SWITCH_DTD:LKCMD # set main lynxaction and line-edit action for ^V
#KEYMAP:^U::ERASE:1    # set line-edit binding for ^U, for default style
#KEYMAP:^[::SETM2:3    # use escape key as modifier - works only sometimes

# - ---------------------------------------------------------------------------- -
# -                                .h1 Appearance                                -
# - ---------------------------------------------------------------------------- -

# - ----------------------------- .h2 LIST_FORMAT ------------------------------ -
# LIST_FORMAT defines the display for local files when Lynx has been
# compiled with LONG_LIST defined in the Makefile.  The default is set
# in userdefs.h, normally to "ls -l" format, and can be changed here
# by uncommenting the indicated lines, or adding a definition with a
# modified parameter list.
#
# This feature is not available for VMS.
#
# The percent items in the list are interpreted as follows:
.nf
#
#    %p    Unix-style permission bits
#    %l    link count
#    %o    owner of file
#    %g    group of file
#    %d    date of last modification
#    %a    anchor pointing to file or directory
#    %A    as above but don't show symbolic links
#    %t    type of file (description derived from MIME type)
#    %T    MIME type as known by Lynx (from mime.types or default)
#    %k    size of file in Kilobytes
#    %K    as above but omit size for directories
#    %s    size of file in bytes
#
.fi
# Anything between the percent and the letter is passed on to sprintf.
# A double percent yields a literal percent on output.  Other characters
# are passed through literally.
#
# If you want only the filename:
#
.ex
#LIST_FORMAT:    %a
#
# If you want a brief output:
#
.ex
#LIST_FORMAT:   %4K %-12.12d %a
#
# If you want the Unix "ls -l" format:
#
.ex
#LIST_FORMAT:    %p %4l %-8.8o %-8.8g %7s %-12.12d %a

# - ---------------------------------------------------------------------------- -
# -                                .h1 Appearance                                -
# - ---------------------------------------------------------------------------- -

# - -------------------------------- .h2 COLOR --------------------------------- -
# COLORS are only available if compiled with SVr4 curses or slang.  This is
# the old color configuration.  The COLOR_STYLE configuration is compiled-in
# and can simulate this if the ".lss" filename is empty.
#
# The line must be of the form:
#
# COLOR:Integer:Foreground:Background
.nf
#
# The Integer value is interpreted as follows:
#   0 - normal                      - normal text
#   1 - bold                        - hyperlinks, see also BOLD_* options above
#   2 - reverse                     - statusline
#   3 - bold + reverse              (not used)
#   4 - underline                   - text emphasis (EM, I, B tags etc.)
#   5 - bold + underline            - hyperlinks within text emphasis
#   6 - reverse + underline         - currently selected hyperlink
#   7 - reverse + underline + bold  - WHEREIS search hits
#
# Each Foreground and Background value must be one of:
#   black         red            green         brown
#   blue          magenta        cyan          lightgray
#   gray          brightred      brightgreen   yellow
#   brightblue    brightmagenta  brightcyan    white
.fi
# or (if you have configured using -enable-default-colors with ncurses or
# slang), "default" may be used for foreground and background.
#
# Note that in most cases a white background is really "lightgray", since
# terminals generally do not implement bright backgrounds.
#
# Uncomment and change any of the compilation defaults.
#
#COLOR:0:black:white
#COLOR:1:blue:white
#COLOR:2:yellow:blue
#COLOR:3:green:white
#COLOR:4:magenta:white
#COLOR:5:blue:white
#COLOR:6:red:white
COLOR:6:brightred:black
#COLOR:7:magenta:cyan

# - ----------------------------- .h2 COLOR_STYLE ------------------------------ -
# Also known as "lss" (lynx style-sheet), the color-style file assigns color
# combination to tags and combinations of tags.  Normally a non-empty value
# is compiled into lynx, and the user can override that using the -lss
# command-line option.  The configure script allows one to compile in an
# empty string.  If lynx finds no value for this setting, it simulates the
# non-color-style assignments using the COLOR settings.
#
# If neither the command-line "-lss" or this COLOR_STYLE setting are given,
# lynx tries the environment variables "LYNX_LSS" and "lynx_lss".  If neither
# is set, lynx uses the first compiled-in value (which as noted, may be empty).
#
# At startup, lynx remembers the name of the color-style file which was used,
# and together with each file specified, provides those as choices in the
# O)ptions menu.
#
#COLOR_STYLE: lynx.lss
#COLOR_STYLE: blue-background.lss
#COLOR_STYLE: bright-blue.lss
#COLOR_STYLE: midnight.lss
#COLOR_STYLE: mild-colors.lss
#COLOR_STYLE: opaque.lss

# - ---------------------------- .h2 NESTED_TABLES ----------------------------- -
# This is an experimental feature for improving table layout.
# It is enabled by default when the COLOR_STYLE configuration is used,
# and false otherwise.
#
#NESTED_TABLES: true

# - --------------------------- .h2 NO_TABLE_CENTER ---------------------------- -
# Normally table cells are centered on the table grid.
# Set this option to true to disable centering.
# The -center command-line option toggles this setting between true/false.
#NO_TABLE_CENTER: false

# - ---------------------------- .h2 ASSUMED_COLOR ----------------------------- -
# If built with a library that recognizes default colors (usually ncurses or
# slang), and if the corresponding option is compiled into lynx, lynx
# initializes it to assume the corresponding foreground and background colors.
# Default colors are those that the terminal (emulator) itself is initialized
# to.  For instance, you might have an xterm running with black text on a white
# background, and want lynx to display colored text on the white background,
# but leave the possibility of using the same configuration to draw colored
# text on a different xterm, this time using its background set to black.
#
# If built with conventional SVr3/SVr4 curses, tells lynx to use color pair 0
# when the given colors match this setting.  That gives a similar effect,
# though not as flexible.  You will get the best results by setting the
# terminal's default colors to match the prevailing text and background colors
# that you have setup with lynx, and then alter the ASSUMED_COLOR setting to
# match that.  If you do not alter the ASSUMED_COLOR setting, curses assumes
# color pair 0's background is black, which implies that its foreground (text)
# is white.
#
# The first value given is the foreground, the second is the background.
#ASSUMED_COLOR:default:default

# - ---------------------------- .h2 DEFAULT_COLORS ---------------------------- -
# If built with a library that recognizes default colors (usually ncurses or
# slang), and if the corresponding option is compiled into lynx, lynx
# initializes it to assume the corresponding foreground and background colors.
# Default colors are those that the terminal (emulator) itself is initialized
# to.
#
# Use this feature to disable the default-colors feature at runtime.
# This is useful for constructing scripts which use the non-color-style
# scheme, e.g., the oldlynx script.
#
# This should precede ASSUMED_COLOR settings.
#DEFAULT_COLORS:true

# - ---------------------------------------------------------------------------- -
# -                                .h1 Appearance                                -
# - ---------------------------------------------------------------------------- -

# - ------------------------------ .h2 PRETTYSRC ------------------------------- -
# Enable pretty source view
#PRETTYSRC:FALSE

# - ---------------------------- .h2 PRETTYSRC_SPEC ---------------------------- -
# Pretty source view settings. These settings are in effect when -prettysrc
# is specified.
# The following lexical elements (lexemes) are recognized:
# comment, tag, attribute, attribute value, generalized angle brackets (
# '<' '>' '</' ), entity, hyperlink destination, entire file, bad sequence,
# bad tag, bad attribute, sgml special.
#  The following group of option tells which styles will surround each
# lexeme. The syntax of option in this group is:
#PRETTYSRC_SPEC:<LEXEMENAME>:<TAGSPEC>:<TAGSPEC>
# The first <TAGSPEC> specifies what tags will precede lexemes of that class
# in the internal html markup. The second - what will be placed (internally)
# after it.
# TAGSPEC has the following syntax:
# <TAGSPEC>:= [ (<TAGOPEN> | <TAGCLOSE>) <SPACE>+ ]*
# <TAGOPEN>:= tagname[.classname]
# <TAGCLOSE>:= !tagname
#
# The following table gives correspondence between lexeme and lexeme name
.nf
# Lexeme                   LEXEMENAME  FURTHER EXPLANATION
# =========================================================
# comment                  COMM
# tag                      TAG         recognized tag name only
# attribute                ATTRIB
# attribute value          ATTRVAL
# generalized brackets     ABRACKET    <  >  </
# entity                   ENTITY
# hyperlink destination    HREF
# entire file              ENTIRE
# bad sequence             BADSEQ      bad entity or invalid construct at text
#                                      level.
# bad tag                  BADTAG      Unrecognized construct in generalized
#                                      brackets.
# bad attribute            BADATTR     The name of the attribute unknown to lynx
#                                      of the tag known to lynx. (i.e.,
#                                      attributes of unknown tags will have
#                                      markup of  ATTRIB)
# sgml special             SGMLSPECIAL doctype, sgmlelt, sgmlele,
#                                      sgmlattlist, marked section, identifier
.fi
#
# Notes:
#
# 1) The markup for HTML_ENTIRE will be emitted only once - it will surround
#    entire file source.
#
# 2) The tagnames specified by TAGSPEC should be valid html tag names.
#
# 3) If the tag/class combination given by TAGOPEN is not assigned a color
#    style in lss file (for lynx compiled with lss support), that tag/class
#    combination will be emitted anyway during internal html markup. Such
#    combinations will be also reported to the trace log.
#
# 4) Lexeme 'tag' means tag name only
#
# 5) Angle brackets of html specials won't be surrounded by markup for ABRACKET
#
.ex
# PRETTYSRC_SPEC:COMM:B I:!I !B
#           HTML comments will be surrounded by <b><i> and </i></b> in the
#           internal html markup
.ex
# PRETTYSRC_SPEC:ATTRVAL: span.attrval : !span
#           Values of the attributes will be surrounded by the
#           <SPAN class=attrval> </SPAN>
.ex
# PRETTYSRC_SPEC:HREF::
#           No special html markup will surround hyperlink destinations (
#           this means that only default color style for hrefs will be applied
#           to them)
#
# For lynx compiled with lss support, the following settings are the default:
#PRETTYSRC_SPEC:COMM:span.htmlsrc_comment:!span
#PRETTYSRC_SPEC:TAG:span.htmlsrc_tag:!span
#PRETTYSRC_SPEC:ATTRIB:span.htmlsrc_attrib:!span
#PRETTYSRC_SPEC:ATTRVAL:span.htmlsrc_attrval:!span
#PRETTYSRC_SPEC:ABRACKET:span.htmlsrc_abracket:!span
#PRETTYSRC_SPEC:ENTITY:span.htmlsrc_entity:!span
#PRETTYSRC_SPEC:HREF:span.htmlsrc_href:!span
#PRETTYSRC_SPEC:ENTIRE:span.htmlsrc_entire:!span
#PRETTYSRC_SPEC:BADSEQ:span.htmlsrc_badseq:!span
#PRETTYSRC_SPEC:BADTAG:span.htmlsrc_badtag:!span
#PRETTYSRC_SPEC:BADATTR:span.htmlsrc_badattr:!span
#PRETTYSRC_SPEC:SGMLSPECIAL:span.htmlsrc_sgmlspecial:!span
# the styles corresponding to them are present in sample .lss file.
# For lynx compiled without lss support, the following settings are the default:
#PRETTYSRC_SPEC:COMM:b:!b
#PRETTYSRC_SPEC:TAG:b:!b
#PRETTYSRC_SPEC:ATTRIB:b:!b
#PRETTYSRC_SPEC:ATTRVAL::
#PRETTYSRC_SPEC:ABRACKET:b:!b
#PRETTYSRC_SPEC:ENTITY:b:!b
#PRETTYSRC_SPEC:HREF::
#PRETTYSRC_SPEC:ENTIRE::
#PRETTYSRC_SPEC:BADSEQ:b:!b
#PRETTYSRC_SPEC:BADTAG::
#PRETTYSRC_SPEC:BADATTR::
#PRETTYSRC_SPEC:SGMLSPECIAL:b:!b

# - ------------------------ .h2 HTMLSRC_ATTRNAME_XFORM ------------------------ -
# - ------------------------ .h2 HTMLSRC_TAGNAME_XFORM ------------------------- -
# Options HTMLSRC_TAGNAME_XFORM and HTMLSRC_ATTRNAME_XFORM control the way the
# names of tags and names of attributes are transformed correspondingly.
# Possible values: 0 - lowercase, 1 - leave as is, 2 - uppercase.
#HTMLSRC_TAGNAME_XFORM:2
#HTMLSRC_ATTRNAME_XFORM:2

# - ------------------ .h2 PRETTYSRC_VIEW_NO_ANCHOR_NUMBERING ------------------ -
# PRETTYSRC_VIEW_NO_ANCHOR_NUMBERING - pretty source view setting
# If "keypad mode" in 'O'ptions screen is "Links are numbered" or
# "Links and form fields are numbered", and PRETTYSRC_VIEW_NO_ANCHOR_NUMBERING is
# TRUE, then links won't be numbered in psrc view and will be numbered
# otherwise. Set this setting to TRUE if you prefer numbered links, but wish
# to get valid HTML source when printing or mailing when in psrc view.
# Default is FALSE.
#PRETTYSRC_VIEW_NO_ANCHOR_NUMBERING:FALSE

# - ---------------------------------------------------------------------------- -
# -                                .h1 Appearance                                -
# - ---------------------------------------------------------------------------- -

# - ------------------------------- .h2 JUSTIFY -------------------------------- -
# JUSTIFY - Appearance
# This option mirrors command-line option with same name.  Default is TRUE.  If
# true, most of text (except headers and like this) will be justified.  This
# has no influence on CJK text rendering.
#
# This option is only available if Lynx was compiled with USE_JUSTIFY_ELTS.
#
#JUSTIFY:FALSE

# - ----------------------- .h2 JUSTIFY_MAX_VOID_PERCENT ----------------------- -
# JUSTIFY_MAX_VOID_PERCENT - Appearance
# This option controls the maximum allowed value for ratio (in percents) of
# 'the number of spaces to spread across the line to justify it' to
# 'max line size for current style and nesting' when justification is allowed.
# When that ratio exceeds the value specified, that particular line won't be
# justified. I.e. the value 28 for this setting will mean maximum value for
# that ratio is 0.28.
#
#JUSTIFY_MAX_VOID_PERCENT:35

# - ---------------------------------------------------------------------------- -
# -                               .h1 Interaction                                -
# - ---------------------------------------------------------------------------- -

# - ---------------------- .h2 TEXTFIELDS_NEED_ACTIVATION ---------------------- -
# If TEXTFIELDS_NEED_ACTIVATION is set to TRUE, and lynx was compiled with
# TEXTFIELDS_MAY_NEED_ACTIVATION defined, then text input form fields need
# to be activated (by pressing the Enter key or similar) before the user
# can enter or modify input.  By default, input fields become automatically
# activated when selected.  Requiring explicit activation can be desired for
# users who use alphanumeric keys for navigation (or other keys that have
# special meaning in the line editor - ' ', 'b', INS, DEL, etc), and don't
# want to 'get stuck' in form fields.  Instead of setting the option here,
# explicit activation can also be requested with the -tna command line
# option.
#
#TEXTFIELDS_NEED_ACTIVATION:FALSE

# - -------------------- .h2 LEFTARROW_IN_TEXTFIELD_PROMPT --------------------- -
# LEFTARROW_IN_TEXTFIELD_PROMPT
# This option controls what happens when a Left Arrow key is pressed while
# in the first position of an active text input field.  By default, Lynx
# asks for confirmation ("Do you want to go back to the previous document?")
# only if the contents of the fields have been changed since entering it.
# If set to TRUE, the confirmation prompt is always issued.
#
#LEFTARROW_IN_TEXTFIELD_PROMPT:FALSE

# - ---------------------------------------------------------------------------- -
# -                                .h1 Appearance                                -
# - ---------------------------------------------------------------------------- -

# - ----------------------------- .h2 SCREEN_SIZE ------------------------------ -
# For win32, allow the console window to be resized to the given values.  This
# requires PDCurses 2.5.  The values given are width,height.
#SCREEN_SIZE:80,24

# - ------------------------------ .h2 NO_MARGINS ------------------------------ -
# Disable left/right margins in the default style sheet.
# This is the same as the command-line "-nomargins" option.
#NO_MARGINS:FALSE

# - ------------------------------- .h2 NO_TITLE ------------------------------- -
# Disable title and blank line from top of page.
# This is the same as the command-line "-notitle" option.
#NO_TITLE:FALSE

# - -------------------------- .h2 UPDATE_TERM_TITLE --------------------------- -
# Enables updating the title in terminal emulators.
# If your terminal emulator supports that escape code,
# you can set this to TRUE.
# This is the same as the command-line "-update_term_title" option.
#UPDATE_TERM_TITLE:FALSE

# - ---------------------------------------------------------------------------- -
# -                                .h1 Appearance                                -
# - ---------------------------------------------------------------------------- -

# - ----------------------------- .h2 UNIQUE_URLS ------------------------------ -
# UNIQUE_URLS can be set to tell Lynx to check for duplicate link numbers in
# the page and corresponding lists, and reusing the original link number.
# This can be set via command-line "-unique-urls".
#UNIQUE_URLS:FALSE

# - ---------------------------------------------------------------------------- -
# -                                .h1 Appearance                                -
# - ---------------------------------------------------------------------------- -

# - ------------------------------ .h2 SHORT_URL ------------------------------- -
# If true, show very long URLs in the status line with "..." to represent the
# portion which cannot be displayed.  The beginning and end of the URL are
# displayed, rather than suppressing the end.
#SHORT_URL:FALSE

# - ---------------------------------------------------------------------------- -
# -                                .h1 Appearance                                -
# - ---------------------------------------------------------------------------- -

# - ----------------------------- .h2 LIST_DECODED ----------------------------- -
# For -dump, show URL-encoded links decoded.
#LIST_DECODED:TRUE
