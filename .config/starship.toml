# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# LINK: https://starship.rs/config
# LINK: https://github.com/geometry-zsh/geometry

# Inserts a blank line between shell prompts
add_newline = false
command_timeout = 1500

# POWERLINE CONTENTS

format = """$character$directory"""
right_format = """$username$hostname"""

[custom.jobs]
symbol = '@'
style = 'bold underline red'
format = '[$symbol($output)]($style) '
when = '[ $STARSHIP_SHOW_JOBS = true ]'
command = 'echo $JOB_COUNT'
ignore_timeout = true

[custom.nvim]
when = '[ $STARSHIP_SHOW_NVIM = true ]'
style = "bold underline red"
format = "[nvim]($style) "
ignore_timeout = true

[custom.zsh_mode]
when = '[[ "$VI_KEYMAP" != "INS" ]]'
style = "bold"
format = "[($output)]($style) "
command = "echo $VI_KEYMAP"
ignore_timeout = true

[custom.session]
when = '[ -n "$SHPOOL_SESSION_NAME" ]'
style = "bold cyan"
command = "echo $SHPOOL_SESSION_NAME"
format = " @[($output)]($style)"

[username]
format = " [$user]($style)@"

[hostname]
ssh_symbol = ""
format = "[$ssh_symbol$hostname]($style)"
style = "bold green"

# CHARACTER FORMAT

[character]
success_symbol = '[▲](bright-white)'
error_symbol = '[△](bright-white)'
vimcmd_symbol             = '[▲](bright-white)'
vimcmd_replace_one_symbol = '[▲](bright-white)'
vimcmd_replace_symbol     = '[▲](bright-white)'
vimcmd_visual_symbol      = '[▲](bright-white)'
# disabled = true

# GIT

[git_commit]
format = ' [\($hash$tag\)]($style)'
tag_symbol = ""

[git_branch]
# truncation_length = 3
truncation_symbol = '...'
symbol = ''
format = " on [$symbol$branch]($style)"
# ignore_branches = ['master', 'main']

# ⚙ ◆ ▼ ▽
[git_status]
disabled = false
conflicted = "c"
ahead = "^"
behind = "v"
up_to_date = ""
untracked = ""
stashed = ""
modified = ""
staged = ""
renamed = ""
deleted = ""
typechanged = ""
format = '[$all_status$ahead_behind]($style)'
style = "bold purple"

[custom.gitclean]
when = """git rev-parse --show-toplevel && test "$(git status -s)" = """""
style = "bright-white"
format = " [⬢]($style) "
description = "Shown on clean git repository"
ignore_timeout = true

[custom.gitdirty]
when = """git rev-parse --show-toplevel && test "$(git status -s)" != """""
style = "bright-white"
format = " [⬡]($style) "
description = "Shown when git has unstaged files"
ignore_timeout = true

